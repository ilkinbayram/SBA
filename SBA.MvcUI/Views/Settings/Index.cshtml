@{
    ViewData["Title"] = "Settings Page";
}

<div class="row" id="spinnerContainer">
</div>

<div class="row operation-containers">
    <div class="col-sm-3 col-md-3">
        <h5>
            Data Text Area
        </h5>
        <div class="form-group">
            <textarea class="form-control" id="dataTextArea"></textarea>
        </div>
    </div>
</div>

<div class="row mt-1 mb-1">
    <div class="col-12 col-sm-12 col-md-12 my-1">
        <div class="form-check form-switch">
            <input class="form-check-input" name="IsOnurChecked" type="checkbox" data-ischecked="false" id="IsOnurChecked">
            <label class="form-check-label lg" for="gridCheck">
                User 0
            </label>
        </div>
    </div>
    <div class="col-12 col-sm-12 col-md-12 my-1">
        <div class="form-check form-switch">
            <input class="form-check-input" name="IsMeChecked" type="checkbox" data-ischecked="false" id="IsMeChecked">
            <label class="form-check-label lg" for="gridCheck">
                User 1
            </label>
        </div>
    </div>
    <div class="col-12 col-sm-12 col-md-12 my-1">
        <div class="form-check form-switch">
            <input class="form-check-input" name="IsEldarChecked" type="checkbox" data-ischecked="false" id="IsEldarChecked">
            <label class="form-check-label lg" for="gridCheck">
                User 3
            </label>
        </div>
    </div>
</div>
<hr />

<div class="row operation-containers">
    <div class="col-sm-4 col-md-4">
        <h5>
            Analyse External
        </h5>
        <button type="button" id="startAnalyseExternal" class="btn btn-lg btn-info">Start</button>
    </div>
    <br />

    <div class="col-sm-4 col-md-4">
        <h5>
            Relative Analyse
        </h5>
        <button type="button" id="startAnalyseRelative" class="btn btn-lg btn-info">Start</button>
    </div>
    <br />

    <div class="col-sm-4 col-md-4">
        <h5>
            Real Analyse
        </h5>
        <button type="button" id="startOwnRealAnalyse" class="btn btn-lg btn-info">Start</button>
    </div>
</div>
<br />
<br />
<div class="row operation-containers">
    <div class="col-sm-4 col-md-4">
        <h5>
            Restore Dataes
        </h5>
        <button type="button" id="startRestoreDb" class="btn btn-lg btn-dark">Start</button>
    </div>
    <br />

    <div class="col-sm-4 col-md-4">
        <h5>
            Backup Dataes
        </h5>
        <button type="button" id="startBackupDb" class="btn btn-lg btn-dark">Start</button>
    </div>
    <br />

    <div class="col-sm-4 col-md-4">
        <h5>
            Update Empty Dataes
        </h5>
        <button type="button" id="startUpdateEmptyCountries" class="btn btn-lg btn-dark">Start</button>
    </div>
</div>
<br />
<br />
<div class="row operation-containers">
    <div class="col-sm-4 col-md-4">
        <h5>
            Clear Cookies
        </h5>
        <button type="button" id="clearCookieBtn" class="btn btn-lg btn-danger">Clear</button>
    </div>

    <div class="col-sm-4 col-md-4">
        <h5>
            Update Corners
        </h5>
        <button type="button" id="updateCorners" class="btn btn-lg btn-warning">Update</button>
    </div>

    <div class="col-sm-4 col-md-4">
        <h5>
            Synchronise Between DB~s
        </h5>
        <button type="button" id="syncDbs" class="btn btn-lg btn-primary">Update</button>
    </div>
</div>


@section ScriptComponent{
    <script type="text/javascript">

        let spinnerHtml = '<div class="box-custom-ball"><div class="shadow"></div><div class="gravity"><div class="custom-ball"></div></div></div>';

        $(document).ready(() => {

            $(".form-check-input").click(function (e) {
                if ($(e.target).data("ischecked") == false) {
                    $(e.target).data("ischecked", true);
                } else {
                    $(e.target).data("ischecked", false);
                };
            });

            $("#startAnalyseExternal").click((e) => {
                
                var dt = $("#dataTextArea").val();

                let dataObj = {
                    Serials: dt,
                    CheckUser:{
                        IsOnurChecked: $("#IsOnurChecked").data("ischecked"),
                        IsMeChecked: $("#IsMeChecked").data("ischecked"),
                        IsEldarChecked: $("#IsEldarChecked").data("ischecked")
                    }
                };

                if (!dataObj.CheckUser.IsEldarChecked && 
                    !dataObj.CheckUser.IsMeChecked && 
                    !dataObj.CheckUser.IsOnurChecked) {
                    alert("Analizin göndərilməsi üçün minimum 1 istifadəçi seçilməlidir.");
                    return;
                }

                $("#spinnerContainer").html(spinnerHtml);
                $(".operation-containers").hide();

                $.ajax({
                    method: "post",
                    url: "/Settings/AnalyseExternal",
                    data: { container: dataObj }
                }).done(function (data) {
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                }).fail(function (data) {
                    console.log(data);
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                });
            });


            $("#startAnalyseRelative").click((e) => {
                $("#spinnerContainer").html(spinnerHtml);
                $(".operation-containers").hide();

                var dt = $("#dataTextArea").val();

                $.ajax({
                    method: "post",
                    url: "/Settings/RelativeAnalysing",
                    data: { serials: dt }
                }).done(function (data) {
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                }).fail(function (data) {
                    console.log(data);
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                });
            });


            $("#startOwnRealAnalyse").click((e) => {

                var dt = $("#dataTextArea").val();

                let dataObj = {
                    Serials: dt,
                    CheckUser: {
                        IsOnurChecked: $("#IsOnurChecked").data("ischecked"),
                        IsMeChecked: $("#IsMeChecked").data("ischecked"),
                        IsEldarChecked: $("#IsEldarChecked").data("ischecked")
                    }
                };

                if (!dataObj.CheckUser.IsEldarChecked &&
                    !dataObj.CheckUser.IsMeChecked &&
                    !dataObj.CheckUser.IsOnurChecked) {
                    alert("Analizin göndərilməsi üçün minimum 1 istifadəçi seçilməlidir.");
                    return;
                }

                $("#spinnerContainer").html(spinnerHtml);
                $(".operation-containers").hide();

                $.ajax({
                    method: "post",
                    url: "/Settings/RealDataAnalysing",
                    data: { container: dataObj }
                }).done(function (data) {
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                }).fail(function (data) {
                    console.log(data);
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                });
            });


            // Utility Processes

            $("#startRestoreDb").click((e) => {

                let isConfirmed = confirm("Do you want to continue to restore the database?");

                if (isConfirmed) {

                    $("#spinnerContainer").html(spinnerHtml);
                    $(".operation-containers").hide();

                    $.ajax({
                        method: "post",
                        url: "/Settings/RestoreDatabase"
                    }).done(function (data) {
                        $("#spinnerContainer").html("");
                        $(".operation-containers").show();
                    }).fail(function (data) {
                        console.log(data);
                        $("#spinnerContainer").html("");
                        $(".operation-containers").show();
                    });
                }
            });


            $("#startBackupDb").click((e) => {

                let isConfirmed = confirm("Do you want to continue to backup the database?");

                if (isConfirmed) {

                    $("#spinnerContainer").html(spinnerHtml);
                    $(".operation-containers").hide();

                    $.ajax({
                        method: "post",
                        url: "/Settings/BackupDatabase"
                    }).done(function (data) {
                        $("#spinnerContainer").html("");
                        $(".operation-containers").show();
                    }).fail(function (data) {
                        console.log(data);
                        $("#spinnerContainer").html("");
                        $(".operation-containers").show();
                    });
                }
            });


            $("#startUpdateEmptyCountries").click((e) => {
                $("#spinnerContainer").html(spinnerHtml);
                $(".operation-containers").hide();

                var dt = $("#dataTextArea").val();

                console.log(dt);

                $.ajax({
                    method: "post",
                    url: "/Settings/UpdateEmptyDataes"
                }).done(function (data) {
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                }).fail(function (data) {
                    console.log(data);
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                });
            });


            $("#clearCookieBtn").click((e) => {
                $("#spinnerContainer").html(spinnerHtml);
                $(".operation-containers").hide();

                $.ajax({
                    method: "post",
                    url: "/Settings/ClearCookie"
                }).done(function (data) {
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                }).fail(function (data) {
                    console.log(data);
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                });
            });

            $("#updateCorners").click((e) => {
                $("#spinnerContainer").html(spinnerHtml);
                $(".operation-containers").hide();

                $.ajax({
                    method: "post",
                    url: '/Settings/UpdateCorners'
                }).done(function (data) {
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                }).fail(function (data) {
                    console.log(data);
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                });
            });

            $("#syncDbs").click((e) => {
                $("#spinnerContainer").html(spinnerHtml);
                $(".operation-containers").hide();

                $.ajax({
                    method: "post",
                    url: '/Settings/SynchroniseDbs'
                }).done(function (data) {
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                }).fail(function (data) {
                    console.log(data);
                    $("#spinnerContainer").html("");
                    $(".operation-containers").show();
                });
            });
        });

    </script>
}